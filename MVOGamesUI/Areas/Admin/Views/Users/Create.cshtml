@model MVOGamesUI.Areas.Admin.ViewModels.RolesUser

@{
    ViewBag.Title = "Create";
}

<h2>Create Admin</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <hr />
        <div class="container itemContainer form-horizontal">
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="myEditorForLengthEdit form-group">
                @Html.LabelFor(model => model.GetUser().Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetUser().Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetUser().Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="myEditorForLengthEdit form-group">
                @Html.LabelFor(model => model.GetUser().PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetUser().PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetUser().PasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="myEditorForLengthEdit form-group">
                @Html.LabelFor(model => model.GetUser().FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetUser().FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetUser().FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="myEditorForLengthEdit form-group">
                @Html.LabelFor(model => model.GetUser().LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetUser().LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetUser().LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="myEditorForLengthEdit form-group">
                @Html.LabelFor(model => model.GetUser().StreetName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetUser().StreetName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetUser().StreetName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="myEditorForLengthEdit form-group">
                @Html.LabelFor(model => model.GetUser().HouseNr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetUser().HouseNr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetUser().HouseNr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="myEditorForLengthEdit form-group">
                @Html.LabelFor(model => model.GetUser().ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetUser().ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetUser().ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="myEditorForLengthEdit form-group">
                @Html.LabelFor(model => model.GetUser().City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetUser().City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetUser().City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="myEditorForLengthEdit form-group">
                @Html.LabelFor(model => model.GetUser().Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GetUser().Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GetUser().Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="myEditorForLengthEdit form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
}
