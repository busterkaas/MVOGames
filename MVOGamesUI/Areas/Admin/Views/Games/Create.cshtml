@model MVOGamesUI.Areas.Admin.ViewModels.GameEditVM

@{
    ViewBag.Title = "Create";
}
<head>
    <script type="text/javascript" src="~/Content/JS/AdminGame.js"></script>
</head>


<h2><strong>Create Game</strong></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <hr />
    <div class="container itemContainer form-horizontal">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="myEditorForLengthEdit form-group">
            @Html.LabelFor(model => model.GetGames().Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetGames().Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetGames().Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="myEditorForLengthEdit form-group">
            @Html.LabelFor(model => model.GetGames().ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetGames().ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetGames().ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="myEditorForLengthEdit form-group">
            @Html.LabelFor(model => model.GetGames().CoverUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetGames().CoverUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetGames().CoverUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="myEditorForLengthEdit form-group">
            @Html.LabelFor(model => model.GetGames().TrailerUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetGames().TrailerUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetGames().TrailerUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="myEditorForLengthEdit form-group">
            @Html.LabelFor(model => model.GetGames().Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetGames().Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetGames().Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="myEditorForLengthEdit form-group">
            @Html.LabelFor(model => model.GetGames().Genres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBox("Genres", null, new { @class = "listBox" })
                @Html.ValidationMessageFor(model => model.GetGames().Genres, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="myEditorForLengthEdit form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Create" class="btn btn-success" /> |
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}

