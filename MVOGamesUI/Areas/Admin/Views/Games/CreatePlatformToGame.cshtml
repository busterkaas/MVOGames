@model DTOModels.Models.PlatformGameDTO

@{
    ViewBag.Title = "CreatePlatformToGame";
}

<h2>New PlatformGame</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <hr />
    <div class="container itemContainer dl-horizontal form-horizontal">
        <br />

        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.GamePlatformName)
        <div class="form-group">
            @Html.LabelFor(model => model.Platform.Name, "Game", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Platforms", ViewBag.GameList as SelectList)
                @Html.ValidationMessageFor(model => model.PlatformId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                <input type="button" value="Cancel" onclick="history.go(-1);return true;" class="btn btn-danger" />
            </div>
        </div>
    </div>
}